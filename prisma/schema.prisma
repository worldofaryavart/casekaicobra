generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  fulfilled
  shipped
  awaiting_shipment
}

enum PaymentMethod {
  stripe
  paypal
  upi
  cod
}

enum PaymentStatus {
  initiated
  pending
  completed
  failed
  refunded
}

enum TshirtSize {
  xs
  s
  m
  l
  xl
  xxl
}

enum TshirtColor {
  black
  navy_blue
  white
  red
}

enum Fabric {
  polyester
  cotton
  polycotton
  dotKnit
}

model Configuration {
  id              String         @id @default(cuid())
  width           Int
  height          Int
  imageUrl        String
  color           TshirtColor?
  size            TshirtSize?
  fabric          Fabric?
  croppedImageUrl String?
  Order           Order[]
}

model User {
  id        String   @id @default(cuid())
  email     String
  Order     Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id                 String           @id @default(cuid())
  configurationId    String
  configuration      Configuration    @relation(fields: [configurationId], references: [id])
  user               User             @relation(fields: [userId], references: [id])
  userId             String
  amount             Float
  isPaid             Boolean          @default(false)
  status             OrderStatus      @default(awaiting_shipment)
  shippingAddress    ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId  String?
  billingAddressId   String?
  billingAddress     BillingAddress?  @relation(fields: [billingAddressId], references: [id])
  paymentMethod      PaymentMethod    @default(stripe)
  paymentStatus      PaymentStatus    @default(initiated)
  paymentIntentId    String?          // ID from payment provider
  trackingId         String?          // For Shipping tracking
  createdAt          DateTime         @default(now())
  updated            DateTime         @updatedAt

  @@index([userId])
  @@index([configurationId])
}

model ShippingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}

model BillingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}

model Product {
  id               String         @id @default(cuid())
  title            String
  description      String
  details          String
  category         String
  realPrice        Float
  discountPrice    Float
  images           String[]       // Supports multiple image URLs
  availableSizes   TshirtSize[]   // Uses the enum defined in your schema
  availableFabrics Fabric[]       // Uses the enum defined in your schema
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}
